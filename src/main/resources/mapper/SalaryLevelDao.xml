<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhaishu.qishouserver.dao.SalaryLevelDao">

    <resultMap type="com.zhaishu.qishouserver.entity.SalaryLevel" id="SalaryLevelMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="employeeId" column="employee_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="salaryLevel" column="salary_level" jdbcType="INTEGER"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="describe" column="level_explain" jdbcType="VARCHAR"/>
        <result property="salary" column="salary" jdbcType="NUMERIC"/>
    </resultMap>



    <!--查询单个-->
    <select id="queryById" resultMap="SalaryLevelMap">
        select
          id, employee_id, name,salary_level, is_delete, create_time, create_by, update_time, update_by, level_explain, salary
        from salary_level
        where id = #{id}
    </select>

    <select id="queryByEmId" resultMap="SalaryLevelMap">
        select
            id, employee_id, name,salary_level, is_delete, create_time, create_by, update_time, update_by, level_explain, salary
        from salary_level
        where employee_id = #{id}
    </select>
    <!--查询指定行数据-->
    <select id="getList" resultMap="SalaryLevelMap">
        select
          id, employee_id, name,salary_level, is_delete, create_time, create_by, update_time, update_by, level_explain, salary
        from salary_level
        where employee_id = 0
        order by name asc
        limit #{offset}, #{limit}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Integer">
        select count(1)
        from salary_level
        <where>
                employee_id = 0

            <if test="salaryLevel != null">
                and salary_level = #{salaryLevel}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="describe != null and describe != ''">
                and explain = #{describe}
            </if>
            <if test="salary != null">
                and salary = #{salary}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into salary_level(employee_id, name, salary_level, is_delete, create_time, create_by, update_time, update_by, level_explain, salary)
        values (#{employeeId}, #{name}, #{salaryLevel}, #{isDelete}, #{createTime}, #{createBy}, #{updateTime}, #{updateBy}, #{describe}, #{salary})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into salary_level(employee_id, salary_level, is_delete, create_time, create_by, update_time, update_by, explain, salary)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.employeeId}, #{entity.salaryLevel}, #{entity.isDelete}, #{entity.createTime}, #{entity.createBy}, #{entity.updateTime}, #{entity.updateBy}, #{entity.describe}, #{entity.salary})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into salary_level(employee_id, salary_level, is_delete, create_time, create_by, update_time, update_by, explain, salary)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.employeeId}, #{entity.salaryLevel}, #{entity.isDelete}, #{entity.createTime}, #{entity.createBy}, #{entity.updateTime}, #{entity.updateBy}, #{entity.describe}, #{entity.salary})
        </foreach>
        on duplicate key update
        employee_id = values(employee_id),
        salary_level = values(salary_level),
        is_delete = values(is_delete),
        create_time = values(create_time),
        create_by = values(create_by),
        update_time = values(update_time),
        update_by = values(update_by),
        level_explain = values(describe),
        salary = values(salary)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update salary_level
        <set>
            <if test="employeeId != null">
                employee_id = #{employeeId},
            </if>
            <if test="salaryLevel != null">
                salary_level = #{salaryLevel},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="describe != null and describe != ''">
                level_explain = #{describe},
            </if>
            <if test="salary != null">
                salary = #{salary},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from salary_level where id = #{id}
    </delete>

</mapper>

